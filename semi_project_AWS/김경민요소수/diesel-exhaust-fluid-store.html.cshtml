<html>
<head>
    <meta charset="utf-8">
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script>
        var html = [];
        $.getJSON('https://diesel-exhaust-fluid-store-s3.s3.ap-northeast-2.amazonaws.com/storedb.json', function (data) {
            $.each(data, function (i, item) { // 업로드한 json 파일에서 총 8개의 자료를 불러온다.
                html.push(Number(item.lat)); // 위도: html[0]
                html.push(Number(item.lng)); // 경도: html[1]
                html.push(item.addr); // 주소: html[2]
                html.push(item.tel); // 전화번호: html[3]
                html.push(item.name); // 주요소 이름: html[4]
                html.push(item.price); // 요소수 가격: html[5]
                html.push(item.regDt); // 요소수 가격 업데이트 시간: html[6]
            });
        });
    </script>
    <title>다음 지도 API</title>
</head>
<body>
    <div id="map" style="width:100%;height:100vh;"></div>

    <script src="//dapi.kakao.com/v2/maps/sdk.js?appkey=1a13e957a9fe0731b57f9126dfa9fd9c"></script>
    <script>
        var mapContainer = document.getElementById('map'), // 지도를 표시할 div
            mapOption = {
                center: new kakao.maps.LatLng(35.17996666400994, 129.07492262460255), // 지도의 중심좌표
                level: 9, // 지도의 확대 레벨
                mapTypeId: kakao.maps.MapTypeId.ROADMAP // 지도종류
            };

        // 지도를 생성합니다
        var map = new kakao.maps.Map(mapContainer, mapOption);

        // 지도에 교통정보를 표시하도록 합니다
        map.addOverlayMapTypeId(kakao.maps.MapTypeId.TRAFFIC);

        // 지도에 확대 축소 컨트롤을 생성합니다
        var zoomControl = new kakao.maps.ZoomControl();

        // 지도의 우측에 확대 축소 컨트롤을 추가합니다
        map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

        // 마커 클러스터러를 생성한다
        var clusterer = new kakao.maps.MarkerClusterer({
            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
            minLevel: 10 // 클러스터 할 최소 지도 레벨
        });

        var markers = [];

        for (var i = 0; i < html.length; i++) {
            if (i % 7 == 0) { // json 파일에서 불러올 7개의 항목들이 잘 추출되었다면 지도에 마커를 찍는다
                var markerPosition = new kakao.maps.LatLng(html[i], html[i + 1]);

                // 마커를 생성한다
                var marker = new kakao.maps.Marker({
                    position: markerPosition
                });

                // 마커가 지도 위에 표시되도록 설정한다
                marker.setMap(map);
                var iwContent = (` 주요소 이름 : ` + html[i + 4] + `\n 주소 : ` + html[i + 2] + `\n 전화번호 : ` + html[i + 3] + `\n 요소수 가격 : ` + html[i + 5] + `\n 요소수 가격 업데이트 시간 : ` + html[i + 6]), // 인포윈도우에 표춛될 내용
                    iwPosition = new kakao.maps.LatLng(html[i], html[i + 1]); // 인포윈도우 표시 위치

                // 인포윈도우를 생성합니다
                var infowindow = new kakao.maps.InfoWindow({
                    position: iwPosition,
                    content: iwContent
                });
                markers.push(marker);
                // 이벤트 리스너로는 클로저를 만들어 등록합니다 
                kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
                kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));
            }
        };

        // 클러스터러에 마커들을 추가합니다
        clusterer.addMarkers(markers);

        // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 
        function makeOverListener(map, marker, infowindow) {
            return function () {
                infowindow.open(map, marker);
            };
        }

        // 인포윈도우를 닫는 클로저를 만드는 함수입니다 
        function makeOutListener(infowindow) {
            return function () {
                infowindow.close();
            };
        }

    </script>
</body>
</html>